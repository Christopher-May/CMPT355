SET datestyle TO "ISO, MDY";

--Drop all
DROP TABLE MuseumLocations CASCADE;
DROP TABLE MuseumConnections CASCADE;
DROP TABLE Exhibitions CASCADE;
DROP TABLE ExhibitionWorks CASCADE;
DROP TABLE MuseumWorks CASCADE;
DROP TABLE Works CASCADE;
DROP TABLE WorkType CASCADE;
DROP TABLE WorkMedium CASCADE;

DROP DOMAIN numberof CASCADE;
DROP DOMAIN nameof CASCADE;
DROP DOMAIN descof CASCADE;
DROP DOMAIN workscharkey CASCADE;
DROP DOMAIN worksnumkey CASCADE;
DROP DOMAIN timeof CASCADE;
DROP DOMAIN locations CASCADE;

DROP VIEW WorksinStorage CASCADE;
DROP VIEW PublicWorks CASCADE;
DROP VIEW WorksFree CASCADE;
DROP VIEW UnusedCapacity CASCADE;

--Create Domains
CREATE DOMAIN numberof AS int
	CHECK (VALUE >0);
	
CREATE DOMAIN nameof AS varchar(50)
	CHECK (VALUE IS NOT NULL);

CREATE DOMAIN descof AS text
	CHECK (VALUE IS NOT NULL);

CREATE DOMAIN workscharkey as char(3)
	CHECK (VALUE IS NOT NULL);
	
CREATE DOMAIN worksnumkey as smallint
	CHECK (VALUE IN('1','2','3'));

CREATE DOMAIN timeof as date;

CREATE DOMAIN locations as varchar(50)
	CHECK (VALUE IN('Gallery A','Gallery B','Gallery C','Lobby','Storage')); 

--Create Tables
CREATE TABLE MuseumLocations (
	mlName nameof,
	mlDimension numberof,
	mlCapacity numberof,
	mlMin numberof,
	mlMax numberof,
	PRIMARY KEY (mlName)
);

CREATE TABLE MuseumConnections (
	mcName nameof,
	mcConnects nameof
	PRIMARY KEY (mcName, mcConnects)
);

CREATE TABLE MuseumWorks (
	mwWorkCharKey workscharkey,
	mwWorkNumKey worksnumkey,
	mwLocation locations
	PRIMARY KEY (mwWorkCharKey,mwWorkNumKey)
);
CREATE TABLE CurrentExhibitions (
	exName nameof,
	exStart timeof,
	exEnd timeof,
	exLocation locations,
	exNumWorks numberof,
	exDescription descof,
	PRIMARY KEY (exName,exStart)
);

CREATE TABLE PastExhibitions (
      	exName nameof,
	exStart timeof,
	exEnd timeof,
	exLocation locations,
	exNumWorks numberof,
	exDescription descof,
	PRIMARY KEY (exName,exStart)
);

CREATE TABLE ExhibitionWorks (
	ewName nameof,
	ewStart timeof,
	ewWorkCharKey workscharkey,
	ewWorkNumKey worksnumkey
	PRIMARY KEY (exName,exStart)
); 

CREATE TABLE Works (
	wrCharKey workscharkey,
	wrNumKey worksnumkey,
	wrName nameof,
	wrAttributed nameof,
	wrCreated timeof,
	wrRetrieved timeof,
	wrPrice numberof,
	wrDescription descof,
	PRIMARY KEY (wrCharKey, wrNumKey)
);

CREATE TABLE WorkType (
	wtCharKey workscharkey,
	wtNumKey worksnumkey,
	wtMainType nameof,
	wtSecondType nameof
	PRIMARY KEY (wtCharKey,wtNumKey,wtSecondType)
);

CREATE TABLE WorkMedium (
	wmCharKey workscharkey,
	wmNumKey worksnumkey,
	wmMedium nameof
	PRIMARY KEY (wmCharKey, wmNumKey)
);

--populate tables
\copy Works FROM 'works.txt'
\copy WorkType FROM 'worksTypes.txt'
\copy WorkMedium FROM 'worksMedium.txt'
\copy MuseumWorks FROM 'museumWorks.txt'
\copy Exhibitions FROM 'exhibitions.txt'
\copy ExhibitionWorks FROM 'exhibitionWorks.txt'
\copy MuseumConnections FROM 'museumConnections.txt'

--create views

CREATE VIEW WorksinStorage
	AS SELECT
		w.wrCharKey AS "Character Identifier",
		w.wrNumKey AS "Numeric Identifier",
		w.wrName AS "Name of Work",
		w.wrPrice AS "Insurance Value"
	FROM
		MuseumWorks m, Works w
	WHERE 
		mwWorkCharKey = wrCharKey AND
		mwWorkNumKey = wrNumKey AND
		mwLocation LIKE 'Storage'
;
CREATE VIEW PublicWorks
	AS SELECT 
		exName AS "Name",
		exLocation AS "Location",
		exNumWorks AS "Number of Works",
		exDescription AS "Description"
	FROM
		Exhibitions 		
;
CREATE VIEW WorksFree
	AS SELECT 
		w.wrName AS "Name of Work",
		w.wrAttributed AS "Attributed",
		m.wmMedium AS "Medium",
		w.wrCreated AS "Created at",
		e.ewName AS "Exhibition Name",
		w.wrDescription AS "Description of Work"
	FROM
		ExhibitionWorks e,Works w, WorkMedium m
	WHERE
		ewWorkCharKey = wrCharKey AND
		ewWorkNumKey = wrNumKey
	ORDER BY
		ewName,
		wrName
;